version: '3.8'

services:
  app:
    build: .
    container_name: async_billing_app
    command: uvicorn app.main:web_app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - redis
    networks:
      - app_network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl status" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - app_network

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  celery:
    build: .
    container_name: celery
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A app worker -l info --concurrency=${CONCURRENCY:-8} -Q default,debt_queue,boleto_queue,email_queue
    volumes:
      - .:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app_network

  flower:
    image: mher/flower
    container_name: flower
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_BACKEND_URL=redis://redis:6379/0
    command:
      - "celery"
      - "--broker=amqp://rabbitmq:5672//"
      - "flower"
      - "--broker_api=http://rabbitmq:15672/api//"
    ports:
      - 5555:5555
    depends_on:
      - rabbitmq
      - redis
      - celery
    networks:
      - app_network

volumes:
  redis_data:

networks:
  app_network:
    driver: bridge
